using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;
using ExcelDesktop.ViewModels;
using ExcelDesktop.Services;
using ExcelDesktop.Helpers;

namespace ExcelDesktop.Views
{
    /// <summary>
    /// Interaction logic for FormulaBarView.xaml
    /// </summary>
    public partial class FormulaBarView : UserControl
    {
        /// <summary>
        /// ViewModel for the Formula Bar
        /// </summary>
        public FormulaBarViewModel ViewModel { get; private set; }

        /// <summary>
        /// Constructor for the FormulaBarView class
        /// </summary>
        public FormulaBarView()
        {
            InitializeComponent();
            SetupEventHandlers();
            InitializeViewModel();
        }

        /// <summary>
        /// Initializes the components defined in the XAML file
        /// </summary>
        private void InitializeComponent()
        {
            // This method is typically auto-generated by the XAML compiler
            // and initializes the UI components defined in the XAML file.
        }

        /// <summary>
        /// Sets up event handlers for formula text changes and key presses
        /// </summary>
        private void SetupEventHandlers()
        {
            // Assuming there's a TextBox named formulaTextBox in the XAML
            if (formulaTextBox != null)
            {
                formulaTextBox.TextChanged += OnFormulaTextChanged;
                formulaTextBox.KeyDown += OnFormulaKeyDown;
            }
        }

        /// <summary>
        /// Initializes the ViewModel property
        /// </summary>
        private void InitializeViewModel()
        {
            ViewModel = new FormulaBarViewModel();
            DataContext = ViewModel;
        }

        /// <summary>
        /// Event handler for changes in the formula text box
        /// </summary>
        /// <param name="sender">The object that raised the event</param>
        /// <param name="e">Event arguments</param>
        private void OnFormulaTextChanged(object sender, TextChangedEventArgs e)
        {
            if (ViewModel != null)
            {
                ViewModel.FormulaText = ((TextBox)sender).Text;
                if (ViewModel.AutoCalculationEnabled)
                {
                    // Trigger formula evaluation
                    CalculationEngineService.EvaluateFormula(ViewModel.FormulaText);
                }
            }
        }

        /// <summary>
        /// Event handler for key presses in the formula text box
        /// </summary>
        /// <param name="sender">The object that raised the event</param>
        /// <param name="e">Event arguments</param>
        private void OnFormulaKeyDown(object sender, KeyEventArgs e)
        {
            if (e.Key == Key.Enter && ViewModel != null)
            {
                ViewModel.EndEdit();
                e.Handled = true;
            }
        }

        /// <summary>
        /// Updates the formula bar content based on the selected cell
        /// </summary>
        /// <param name="cellContent">The content of the selected cell</param>
        public void UpdateFormulaBar(string cellContent)
        {
            if (ViewModel != null)
            {
                ViewModel.FormulaText = cellContent;
                // Update UI to reflect the new content
                if (formulaTextBox != null)
                {
                    formulaTextBox.Text = cellContent;
                }
            }
        }
    }
}