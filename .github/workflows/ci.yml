name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Build project
      run: npm run build

    - name: Run unit tests
      run: npm run test:unit

    - name: Run integration tests
      run: npm run test:integration

    - name: Run end-to-end tests
      run: npm run test:e2e

    - name: Run performance tests
      run: npm run test:performance

    - name: Run security tests
      run: npm run test:security

    - name: Run accessibility tests
      run: npm run test:accessibility

    - name: Generate code coverage report
      run: npm run test:coverage

    - name: Upload code coverage report
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: coverage/

  deploy:
    name: Deploy
    needs: build_and_test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Deploy to staging
      run: |
        # Add your deployment script or commands here
        echo "Deploying to staging environment"

    - name: Run post-deployment tests
      run: npm run test:post-deployment

    - name: Deploy to production
      if: success()
      run: |
        # Add your production deployment script or commands here
        echo "Deploying to production environment"

    - name: Notify team
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: Deployment ${{ job.status == 'success' && 'succeeded' || 'failed' }}!
        fields: repo,message,commit,author,action,eventName,ref,workflow
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}